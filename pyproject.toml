[tool.poetry]
name = "wattour"
version = "0.1.0"
description = "Internal Watt-Our package for different methods"
authors = ["Alex Tseng <134972440+alexrtseng@users.noreply.github.com>"]
license = "Proprietary"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
pandas = "^2.2.3"
setuptools = "^75.3.0"
gurobipy = "^12.0.1"


[tool.poetry.group.dev.dependencies]
ruff = "^0.9.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = 'py38'

exclude = [
    "migrations",
    "__pycache__",
    "manage.py",
    "settings.py",
    "env",
    ".env",
    "venv",
    ".venv",
]

line-length = 120

[tool.ruff.format]
docstring-code-format = false

[tool.ruff.lint]
select = [
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "D",  # pydocstyle
    "E",  # Error
    "F",  # pyflakes
    "I",  # isort
    "N",  # pep8-naming
    "PGH",  # pygrep-hooks
    "PTH", # flake8-use-pathlib
    "Q",  # flake8-quotes
    "S",  # bandit
    "SIM",  # flake8-simplify
    "TRY",  # tryceratops
    "UP",  # pyupgrade
    "W",  # Warning
    "YTT", # flake8-2020
]

ignore = [
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D106",
    "D107",
    "UP007",
]